# game/app.yaml
runtime: python311 # Or python310, python311, etc. Choose a version compatible with your Python code.
service: python-worker # Give this service a unique, descriptive name.
                       # This name will be part of its internal URL.

instance_class: F1
automatic_scaling:
  min_instances: 0
  max_instances: 1

# !!! CRITICAL: Define the entrypoint for your Python application !!!
# This assumes your Python code is structured as a simple web server (e.g., Flask or FastAPI).
# If your Python code is just a script, you'll need to wrap it with a small web framework
# so it can respond to HTTP requests.

# Example for Flask:
# If your 'main.py' contains a Flask app instance named 'app':
#entrypoint: gunicorn -b :$PORT main:app

# Example for FastAPI:
# entrypoint: uvicorn main:app --host 0.0.0.0 --port $PORT

# Example for a simple script (less common for App Engine services that scale to zero efficiently):
# This would start a simple HTTP server in your script that listens on $PORT.
entrypoint: python3 run.py

# Any Python specific environment variables can go here
env_variables:
  PYTHON_ENV: production